--- a/src/lua_cb_gfx.cpp	2025-08-29 19:20:41.872880440 +0200
+++ b/src/lua_cb_gfx.cpp	2025-08-29 19:21:20.280189682 +0200
@@ -294,12 +294,31 @@
     }
     float arg[16];
     if (n > 9) {
-        LAssert(L, n >= 17, "DrawImageQuad(): incomplete set of texture coordinates provided");
-        for (int i = 2; i <= 17; i++) {
-            LAssert(L, lua_isnumber(L, i), "DrawImageQuad() argument %d: expected number, got %t", i, i);
-            arg[i-2] = (float)lua_tonumber(L, i);
+        if (lua_istable(L, 10)) {
+            for (int i = 2; i <= 9; i++) {
+                LAssert(L, lua_isnumber(L, i), "DrawImageQuad() argument %d: expected number, got %t", i, i);
+                arg[i-2] = (float)lua_tonumber(L, i);
+            }
+            for (int i = 1; i <= 8; i++) {
+                lua_rawgeti(L, 10, i);
+                LAssert(L, lua_isnumber(L, -1), "DrawImageQuad() texture coord table: expected number");
+                arg[7 + i] = (float)lua_tonumber(L, -1);
+                lua_pop(L, 1);
+            }
+            pobwindow->AppendCmd(std::make_unique<DrawImageQuadCmd>(tex_idx, arg[0], arg[1], arg[2], arg[3], arg[4], arg[5], arg[6], arg[7], arg[8], arg[9], arg[10], arg[11], arg[12], arg[13], arg[14], arg[15]));
+        } else if (n >= 17) {
+            for (int i = 2; i <= 17; i++) {
+                LAssert(L, lua_isnumber(L, i), "DrawImageQuad() argument %d: expected number, got %t", i, i);
+                arg[i-2] = (float)lua_tonumber(L, i);
+            }
+            pobwindow->AppendCmd(std::make_unique<DrawImageQuadCmd>(tex_idx, arg[0], arg[1], arg[2], arg[3], arg[4], arg[5], arg[6], arg[7], arg[8], arg[9], arg[10], arg[11], arg[12], arg[13], arg[14], arg[15]));
+        } else {
+            for (int i = 2; i <= 9; i++) {
+                LAssert(L, lua_isnumber(L, i), "DrawImageQuad() argument %d: expected number, got %t", i, i);
+                arg[i-2] = (float)lua_tonumber(L, i);
+            }
+            pobwindow->AppendCmd(std::make_unique<DrawImageQuadCmd>(tex_idx, arg[0], arg[1], arg[2], arg[3], arg[4], arg[5], arg[6], arg[7]));
         }
-        pobwindow->AppendCmd(std::make_unique<DrawImageQuadCmd>(tex_idx, arg[0], arg[1], arg[2], arg[3], arg[4], arg[5], arg[6], arg[7], arg[8], arg[9], arg[10], arg[11], arg[12], arg[13], arg[14], arg[15]));
     } else {
         for (int i = 2; i <= 9; i++) {
             LAssert(L, lua_isnumber(L, i), "DrawImageQuad() argument %d: expected number, got %t", i, i);
